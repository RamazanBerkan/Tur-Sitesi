// <auto-generated />
using System;
using ArgedeSP.DAL.DataContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ArgedeSP.DAL.Migrations
{
    [DbContext(typeof(ArgedeSPContext))]
    partial class ArgedeSPContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.14-servicing-32113")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.AnahtarDeger", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Anahtar");

                    b.Property<string>("Deger");

                    b.Property<int>("Dil");

                    b.Property<string>("GorunenAd");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.HasKey("Id");

                    b.ToTable("AnahtarDeger");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Blog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArkaPlanResim");

                    b.Property<string>("Baslik");

                    b.Property<string>("BlogEtiket");

                    b.Property<int>("BlogKategoriId");

                    b.Property<int>("Dil");

                    b.Property<string>("KisaAciklama");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("Resim");

                    b.Property<string>("SeoUrl");

                    b.Property<string>("Ses");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.HasIndex("BlogKategoriId");

                    b.ToTable("Bloglar");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.BlogKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AnaDilcesi");

                    b.Property<string>("ArkaPlanResim");

                    b.Property<string>("BlogKategoriAdi");

                    b.Property<int>("Dil");

                    b.Property<string>("KisaAciklama");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("Resim");

                    b.Property<string>("SeoUrl");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.ToTable("BlogKategorileri");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.DbLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Exception");

                    b.Property<string>("Level");

                    b.Property<string>("LogEvent");

                    b.Property<string>("Message");

                    b.Property<string>("MessageTemplate");

                    b.Property<string>("Properties");

                    b.Property<DateTime>("TimeStamp");

                    b.HasKey("Id");

                    b.ToTable("DbLogs");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Haber", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Baslik");

                    b.Property<int>("Dil");

                    b.Property<string>("KisaAciklama");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("Resim");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.ToTable("Haberler");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Hizmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArkaPlanResim");

                    b.Property<int>("Dil");

                    b.Property<string>("HizmetAdi");

                    b.Property<string>("KisaAciklama");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("Resim");

                    b.Property<string>("SeoUrl");

                    b.Property<int>("Siralama");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.ToTable("Hizmetler");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Kullanici", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccessFailedCount");

                    b.Property<string>("Ad");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<int>("Durum");

                    b.Property<string>("Email")
                        .HasMaxLength(256);

                    b.Property<bool>("EmailConfirmed");

                    b.Property<string>("EngellenmeNedeni");

                    b.Property<DateTime>("EngellenmeTarihi");

                    b.Property<bool>("LockoutEnabled");

                    b.Property<DateTimeOffset?>("LockoutEnd");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256);

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PhoneNumber");

                    b.Property<bool>("PhoneNumberConfirmed");

                    b.Property<string>("ProfilResmi");

                    b.Property<string>("SecurityStamp");

                    b.Property<string>("Soyad");

                    b.Property<string>("TCKN");

                    b.Property<bool>("TwoFactorEnabled");

                    b.Property<string>("UserName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("Kullanicilar");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.KullaniciRol", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("RoleId");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("KullaniciRolleri");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.OnHizmet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArkaPlanResim");

                    b.Property<int>("Dil");

                    b.Property<string>("KisaAciklama");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("OnHizmetAdi");

                    b.Property<string>("Resim");

                    b.Property<string>("SeoUrl");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.ToTable("OnHizmetler");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Referans", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ArkaPlanResmi");

                    b.Property<string>("KisaAciklama");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("ReferansAdi");

                    b.Property<string>("Resim");

                    b.Property<string>("SeoUrl");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.ToTable("Referanslar");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Rol", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken();

                    b.Property<string>("Name")
                        .HasMaxLength(256);

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("Roller");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.SliderResim", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AltBaslik");

                    b.Property<int>("Dil");

                    b.Property<string>("Link");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<int>("ResimSira");

                    b.Property<string>("ResimUrl");

                    b.Property<int>("SliderYeri");

                    b.Property<string>("UstBaslik");

                    b.HasKey("Id");

                    b.ToTable("SliderResimleri");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Urun", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DetayAciklama");

                    b.Property<int>("Dil");

                    b.Property<int>("Durum");

                    b.Property<string>("Fiyat");

                    b.Property<string>("Indirim");

                    b.Property<string>("IndirimliFiyat");

                    b.Property<string>("Keywords");

                    b.Property<string>("KisaAciklama");

                    b.Property<string>("NasilCalisir");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("Resim");

                    b.Property<string>("SeoUrl");

                    b.Property<string>("TeknikOzellikler");

                    b.Property<string>("UrunAdi");

                    b.Property<int>("UrunKategoriId");

                    b.Property<string>("UrunKodu");

                    b.Property<int>("UrunSira");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.HasIndex("UrunKategoriId");

                    b.ToTable("Urunler");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.UrunDokumani", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("DokumanAdi");

                    b.Property<string>("DokumanUrl");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<int>("UrunId");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunDokumanlari");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.UrunKategori", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Ad");

                    b.Property<string>("AnaDilcesi");

                    b.Property<string>("ArkaPlanResim");

                    b.Property<int>("Dil");

                    b.Property<string>("KisaAciklama");

                    b.Property<string>("NavbarResim");

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("Resim");

                    b.Property<string>("SeoUrl");

                    b.Property<int?>("UstId");

                    b.Property<string>("UzunAciklama");

                    b.HasKey("Id");

                    b.HasIndex("UstId");

                    b.ToTable("UrunKategorileri");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.UrunResimGaleri", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("OlusturmaTarihi");

                    b.Property<string>("ResimUrl");

                    b.Property<int>("UrunId");

                    b.HasKey("Id");

                    b.HasIndex("UrunId");

                    b.ToTable("UrunResimGalerileri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("RoleId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("RolClaimleri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType");

                    b.Property<string>("ClaimValue");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("KullaniciClaimleri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider");

                    b.Property<string>("ProviderKey");

                    b.Property<string>("ProviderDisplayName");

                    b.Property<string>("UserId")
                        .IsRequired();

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("KullaniciGirisleri");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId");

                    b.Property<string>("LoginProvider");

                    b.Property<string>("Name");

                    b.Property<string>("Value");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("KullaniciTokenlari");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Blog", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.BlogKategori", "BlogKategori")
                        .WithMany("Bloglar")
                        .HasForeignKey("BlogKategoriId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.KullaniciRol", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.Rol", "Role")
                        .WithMany("KullaniciRolleri")
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("ArgedeSP.Contracts.Entities.Kullanici", "User")
                        .WithMany("KullaniciRolleri")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.Urun", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.UrunKategori", "UrunKategori")
                        .WithMany("Urunler")
                        .HasForeignKey("UrunKategoriId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.UrunDokumani", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.Urun", "Urun")
                        .WithMany("UrunDokumanlari")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.UrunKategori", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.UrunKategori", "UstKategori")
                        .WithMany()
                        .HasForeignKey("UstId");
                });

            modelBuilder.Entity("ArgedeSP.Contracts.Entities.UrunResimGaleri", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.Urun", "Urun")
                        .WithMany("UrunResimGalerisi")
                        .HasForeignKey("UrunId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.Rol")
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.Kullanici")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.Kullanici")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("ArgedeSP.Contracts.Entities.Kullanici")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
